!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e){$(document).ready((function(){const t=function(){const t=document.querySelector("#imaticSlackData");if(null!=t)return JSON.parse(t.dataset.data)}();var e=$("a[href='#history']"),n=$("#notifyToSlack");function i(t,e){t.click((function(t){t.preventDefault(),e.is(":visible")?(e.hide(),$(this).find("i").toggleClass("fa-eye fa-eye-slash")):(e.show(),$(this).find("i").toggleClass("fa-eye-slash fa-eye"))}))}e.appendTo(e.parent()),e.after(n),n.click((function(t){t.preventDefault(),t.stopPropagation();let e=$("#slackLogoButton");var n=0,i=setInterval((function(){e.css({transform:"rotate("+n+"deg)"}),n+=10}),50);$.ajax({url:$(this).attr("href"),method:"POST",success:function(t){"success"==t.status?($("#slackNotificationIcon").fadeIn().delay(1500).fadeOut(),clearInterval(i),e.css({transform:"rotate(0deg)"})):($("#slackNotificationIconError").fadeIn().delay(1500).fadeOut(),clearInterval(i),e.css({transform:"rotate(0deg)"}))},error:function(t,e,n){console.log(e+": "+n)}})})),i($("#show-channel-list"),$("#channel-list")),i($("#show-assigned-list"),$("#assigned-list"));$('form[action="bug_reminder.php"]').each((function(){var e=$(this),n=e.find('input[type="submit"]'),i=t.imatic_button_reminder_settings.iconSrc,r=t.imatic_button_reminder_settings.text,a=$("<button>").attr({type:"submit",id:"reminder-page-button",class:"btn btn-primary btn-white btn-round margin-left-8"}),o=$("<img>").attr("src",i).css("margin-right","5px");a.append(o),a.append(r),n.after(a),a.on("click",(function(t){t.preventDefault(),e.append($("<input>").attr({type:"hidden",name:"slack_notify",value:"true"})),e.submit()}))})),$("#recipient option").each((function(){const e=$(this),n=t.imatic_users_with_assigned_channels,i=t.imatic_text_after_recipient_if_has_channel,r=t.imatic_text_after_recipient_if_has_not_channel,a=parseInt($(this).val());var o=e.text();c(n,a)?e.html(o+" "+i):e.html(o+" "+r)}));for(var r=document.getElementById("recipient"),a=[],o=r.options,s=0;s<o.length;s++)o[s].addEventListener("click",(function(){var e=(a=Array.from(o).filter(t=>t.selected).map(t=>t.value)).filter((function(e){return c(t.imatic_users_with_assigned_channels,e)})).length===a.length,n=$("#"+t.imatic_button_reminder_settings.id);1==t.imatic_button_reminder_settings.disable_if_user_not_have_assign_channel&&(e?n.prop("disabled",!1):n.prop("disabled",!0))}));function c(t,e){return e=parseInt(e),Object.values(t).includes(e)}}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,